# Private defined type, do not use directly.
# Take care about creating config files
# for transports.
define spectrum::config (
  $port,
  $protocol,
  $enable = true,
  $server = '127.0.0.1',
  $use_proxy = false,
  $jid    = "${protocol}.${::domain}",
  $registration_enable_public_registration = true,
  $registration_username_mask = undef,
  $registration_allowed_usernames = undef,
  $registration_username_label = undef,
  $registration_instructions = undef,
  $registration_extra_fields = encoding,
  $password = 'changeme',
  $admins = undef,
  $filetransfer_cache = '/var/spectrum/filetransfer_cache',
  $filetransfer_web = 'http://example.com/files/',
  $filetransfer_force_cache_storage = false,
  $language = 'en',
  $vip_mode = false,
  $only_for_vip = false,
  $allowed_servers = 'localhost',
  $features_filetransfer = 1,
  $features_avatars = 1,
  $features_chatstates = 1,
  $features_statistics = 1,
  $vip_features_filetransfer = 1,
  $vip_features_avatars = 1,
  $vip_features_chatstates = 1,
  $vip_features_statistics = 1,
  $pid_file = "/var/spectrum/${protocol}.${::domain}.pid",
  $require_tls = 'false',
  $eventloop = undef,
  $log_file = "/var/log/spectrum/${protocol}.${::domain}.log",
  $log_areas = 'xml;purple',
  $database_type = 'sqlite',
  $database_hostname = undef,
  $database_user = undef,
  $datatabase_password = undef,
  $database = "/var/lib/spectrum/${protocol}.${::domain}/spectrum.db",
  $database_prefx = "${protocol}_",
  $purple_userdir = "/var/spectrum/${protocol}.${::domain}/userdir",
  $config_interface = "/var/spectrum/${protocol}.${::domain}.sock",
  $filetransfer_bind_address = undef,
  $filetransfer_public_address = undef,
  
) {

  file { "/etc/spectrum/${protocol}.cfg":
    owner   => 'root',
    group   => '_spectrum',
    mode    => '0640',
    content => template('spectrum/spectrum.cfg.erb'),
    require => Package['spectrum'],
    notify  => Service['spectrum'],
  }
}
